pipeline {
    agent any
    stages {
        stage('SonarQube Code Analysis') {
            steps {
                script {
                    withSonarQubeEnv('SonarQube') {
                        bat """
                        cd client
                        sonar-scanner -Dsonar.projectKey=inotebook-frontend -Dsonar.projectName=inotebook-frontend -Dsonar.sources=.
                        """ 
                    }
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    bat """
                    cd client
                    docker build -t hirentimbadiya/notes-frontend .
                    """
                }
            }
        }
        stage('Login To DockerHub') {
            steps {
                withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub_password')]) {
                    bat """
                    docker logout
                    docker login -u hirentimbadiya -p ${dockerhub_password}
                    """
                }
            }
        }
        stage("Push Image To DockerHub") {
            steps {
                script {
                    bat 'docker push hirentimbadiya/notes-frontend'
                }
            }
        }
        stage("Deploy To Kubernetes") {
            steps {
                script {
                    withKubeConfig(caCertificate: '', clusterName: 'gke_gcp-learning-417116_us-central1-c_main-cluster', contextName: '', credentialsId: 'k8s-cred', namespace: 'jenkins', restrictKubeConfigAccess: true, serverUrl: 'https://35.226.254.176') {
                        bat """
                        cd client
                        kubectl apply -f deployment.yaml
                        """
                    }
                }
            }
        }
    }
}