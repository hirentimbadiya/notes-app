@Library('notesapp-devops') _
pipeline {
    agent any
    environment {
        RELEASE_NAME = "notes-backend"
        IMAGE_NAME = "hirentimbadiya/notes-backend"
        SONAR_INSTALLATION_NAME = "SonarQube"
    }
    stages {
        stage('Scanning, Building and Deploying') {
            steps {
                script {
                    pipeline_server(imageName: IMAGE_NAME, releaseName: RELEASE_NAME, installationName: SONAR_INSTALLATION_NAME)
                }
            }
        }
    }
    post {
        always {
            script {
                def jobName = env.JOB_NAME
                def buildNumber = env.BUILD_NUMBER
                def pipelineStatus = currentBuild.result ?: 'UNKNOWN'
                def bannerColor = pipelineStatus.toUpperCase() == 'SUCCESS' ? 'green' : 'red'

                def body = """
                    <html>
                    <body>
                    <div style="border: 4px solid ${bannerColor}; padding: 10px;">
                    <h2>${jobName} - Build ${buildNumber}</h2>
                    <div style="background-color: ${bannerColor}; padding: 10px;">
                    <h3 style="color: white;">Pipeline Status: ${pipelineStatus.toUpperCase()}</h3>
                    </div>
                    <p>Check the <a href="${BUILD_URL}">console output</a>.</p>
                    </div>
                    </body>
                    </html>
                """

                emailext (
                    subject: "${jobName} - Build ${buildNumber} - ${pipelineStatus.toUpperCase()}",
                    body: body,
                    to: 'hirentimbadiya74@gmail.com',
                    from: 'jenkins@noreply.com',
                    replyTo: 'jenkins@noreply.com',
                    mimeType: 'text/html',
                )
            }
        }
    }
}